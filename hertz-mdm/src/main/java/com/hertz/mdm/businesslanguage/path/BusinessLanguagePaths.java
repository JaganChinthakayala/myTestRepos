package com.hertz.mdm.businesslanguage.path;

import com.orchestranetworks.schema.Path;
/**
 * Generated by EBX5 5.7.1 fix B [1034:0005], at  2016/12/22 12:08:31 [EST].
 * WARNING: Any manual changes to this class may be overwritten by generation process.
 * DO NOT MODIFY THIS CLASS.
 * 
 * This interface defines constants related to schema [Module: hertz-mdm, path: /WEB-INF/ebx/schemas/BusinessLanguageDataModel.xsd].
 * 
 * Root paths in this interface: 
 * 	'/'   relativeToRoot: false
 * 
 */
public interface BusinessLanguagePaths
{
	// ===============================================
	// Constants for nodes under '/'.
	// Prefix:  ''.
	// Statistics:
	//		26 path constants.
	//		16 leaf nodes.
	public static final Path _Root = Path.parse("/root");

	// Table type path
	public final class _Root_BusinessLanguage {
		private static final Path _Root_BusinessLanguage = _Root.add("BusinessLanguage");
		public static Path getPathInSchema()
		{
			return _Root_BusinessLanguage;
		}
	public static final Path _ID = Path.parse("./iD");
	public static final Path _Hierarchy = Path.parse("./hierarchy");
	public static final Path _BusinessAsset = Path.parse("./businessAsset");
	public static final Path _Parent = Path.parse("./parent");
	public static final Path _Abbreviation = Path.parse("./abbreviation");
	public static final Path _Definition = Path.parse("./Definition");
	public static final Path _Synonyms = Path.parse("./synonyms");
	public static final Path _Description = Path.parse("./description");
	public static final Path _BusinessUnit = Path.parse("./businessUnit");
	public static final Path _SubjectArea = Path.parse("./subjectArea");
	public static final Path _SystemsOfRecord = Path.parse("./systemsOfRecord");
	public static final Path _DataStore = Path.parse("./dataStore");
	public static final Path _Locale = Path.parse("./locale");
	public static final Path _RelatedTerms = Path.parse("./relatedTerms");
	public static final Path _Date = Path.parse("./date");
	public static final Path _Status = Path.parse("./status");
	} 
	// ===============================================

}
